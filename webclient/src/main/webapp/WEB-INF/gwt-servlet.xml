<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012 Grid Dynamics Consulting Services, Inc, All Rights Reserved
  ~ http://www.griddynamics.com
  ~
  ~ This library is free software; you can redistribute it and/or modify it under the terms of
  ~ the GNU Lesser General Public License as published by the Free Software Foundation; either
  ~ version 2.1 of the License, or any later version.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  ~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  ~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  ~ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
  ~ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  ~ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  ~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  ~ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  ~ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  ~ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="searchSystemEnvironment" value="true" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>

        <property name="locations">
            <array>
                <value>classpath:webclient.properties</value>
                <value>file://${jagger.webclient.properties}</value>
            </array>
        </property>
    </bean>

    <bean class="org.gwtwidgets.server.spring.GWTHandler">
        <property name="mappings">
            <map>
                <entry key="/PlotProviderService" value-ref="plotProviderService"/>
                <entry key="/SessionDataService" value-ref="sessionDataService"/>
                <entry key="/MetricDataService" value-ref="metricDataService"/>
                <entry key="/ControlTreeCreatorService" value-ref="controlTreeCreatorService"/>
                <entry key="/CommonDataService" value-ref="commonDataService"/>
            </map>
        </property>
    </bean>

    <bean id="dataPointCompressingProcessor" class="com.griddynamics.jagger.webclient.server.plot.DataPointCompressingProcessor">
        <constructor-arg index="0" value="${plot.data.compressing.threshold}"/>
        <constructor-arg index="1" value="${plot.data.compressing.minCountForProcessing}"/>
    </bean>

    <bean id="plotProviderService" class="com.griddynamics.jagger.webclient.server.PlotProviderServiceImpl">
        <property name="compressingProcessor" ref="dataPointCompressingProcessor"/>
        <property name="monitoringPlotDataProviders" ref="monitoringPlotDataProviders"/>
        <property name="workloadPlotDataProviders" ref="workloadPlotDataProviders"/>
        <property name="customMetricPlotDataProvider" ref="customMetricPlotDataProvider"/>
    </bean>

    <bean id="controlTreeCreatorService" class="com.griddynamics.jagger.webclient.server.ControlTreeCreatorServiceImpl" >
        <property name="databaseFetcher" ref="databaseFetcher" />
        <property name="threadPool" ref="executorService"/>
    </bean>

    <bean id="executorService" class="java.util.concurrent.Executors"
          factory-method="newFixedThreadPool"
          destroy-method="shutdownNow">
        <constructor-arg value="10"/>
    </bean>

    <bean id="databaseFetcher" class="com.griddynamics.jagger.webclient.server.CommonDataProviderImpl">
        <property name="customMetricPlotDataProvider" ref="customMetricPlotDataProvider"/>
        <property name="monitoringPlotGroups" ref="monitoringPlotGroups"/>
        <property name="workloadPlotGroups" ref="workloadPlotGroups"/>
        <property name="standardMetrics" ref="standardMetrics"/>
    </bean>


    <bean id="sessionDataService" class="com.griddynamics.jagger.webclient.server.SessionDataServiceImpl"/>

    <bean id="commonDataService" class="com.griddynamics.jagger.webclient.server.CommonDataServiceImpl">
        <property name="userCommentAvailable" value="${user.comment.available}"/>
        <property name="tagsAvailable" value="${tags.available}"/>
        <property name="userCommentMaxLength" value="${user.comment.max.length}"/>
    </bean>

    <!-- @deprecated another conception of control since jagger 1.2.2-m3
    <bean id="taskDataService" class="com.griddynamics.jagger.webclient.server.TaskDataServiceImpl"/>

    <bean id="workloadDataService" class="com.griddynamics.jagger.webclient.server.WorkloadServiceImpl"/>
    <bean id="workloadTaskDataService" class="com.griddynamics.jagger.webclient.server.WorkloadTaskDataServiceImpl"/>
    -->
    <bean id="metricDataService" class="com.griddynamics.jagger.webclient.server.MetricDataServiceImpl">
        <property name="standardMetrics" ref="standardMetrics"/>
    </bean>

    <!--==========Legend Provider==========-->
    <bean id="legendProvider" class="com.griddynamics.jagger.webclient.server.LegendProvider"/>

    <!--==========Workload Plot Data Providers-->
    <bean id="throughputPlotDataProvider" class="com.griddynamics.jagger.webclient.server.plot.ThroughputPlotDataProvider">
        <property name="legendProvider" ref="legendProvider"/>
    </bean>
    <bean id="latencyPlotDataProvider" class="com.griddynamics.jagger.webclient.server.plot.LatencyPlotDataProvider">
        <property name="legendProvider" ref="legendProvider"/>
    </bean>
    <bean id="timeLatencyPercentilePlotDataProvider" class="com.griddynamics.jagger.webclient.server.plot.TimeLatencyPercentilePlotDataProvider">
        <property name="legendProvider" ref="legendProvider"/>
    </bean>

    <bean id="customMetricPlotDataProvider" class="com.griddynamics.jagger.webclient.server.plot.CustomMetricPlotDataProvider">
        <property name="legendProvider" ref="legendProvider"/>
    </bean>

    <bean id="workloadPlotDataProviders" class="java.util.LinkedHashMap">
        <constructor-arg index="0">
            <map>
                <entry key="Throughput" value-ref="throughputPlotDataProvider"/>
                <entry key="Latency" value-ref="latencyPlotDataProvider"/>
                <entry key="Time Latency Percentile" value-ref="timeLatencyPercentilePlotDataProvider"/>
            </map>
        </constructor-arg>
    </bean>

    <!--===========Monitoring Plot Data Providers===========-->
    <bean id="monitoringPlotDataProvider" class="com.griddynamics.jagger.webclient.server.plot.MonitoringPlotDataProvider">
        <constructor-arg index="0" ref="monitoringPlotGroups"/>
        <property name="legendProvider" ref="legendProvider"/>
        <property name="renderTaskBoundaries" value="${plot.rendering.taskBoundariesEnabled}"/>
    </bean>

    <bean id="monitoringPlotDataProviders" class="java.util.LinkedHashMap">
        <constructor-arg index="0">
            <map>
                <entry key="CPU Utilization" value-ref="monitoringPlotDataProvider"/>
                <entry key="CPU Load Average" value-ref="monitoringPlotDataProvider"/>
                <entry key="System Memory" value-ref="monitoringPlotDataProvider"/>
                <entry key="TCP Connections" value-ref="monitoringPlotDataProvider"/>
                <entry key="TCP Traffic" value-ref="monitoringPlotDataProvider"/>

                <entry key="GC major count" value-ref="monitoringPlotDataProvider"/>
                <entry key="GC major time" value-ref="monitoringPlotDataProvider"/>
                <entry key="GC minor count" value-ref="monitoringPlotDataProvider"/>
                <entry key="GC minor time" value-ref="monitoringPlotDataProvider"/>
                <entry key="Heap Memory" value-ref="monitoringPlotDataProvider"/>
                <entry key="Non Heap Memory" value-ref="monitoringPlotDataProvider"/>
                <entry key="Disks IO" value-ref="monitoringPlotDataProvider"/>
            </map>
        </constructor-arg>
    </bean>

    <util:map id="standardMetrics" key-type="java.lang.String">
        <entry key="Throughput">
            <bean class="com.griddynamics.jagger.util.Pair">
                <constructor-arg name="first" value="throughput"/>
                <constructor-arg name="second" value="Throughput, tps"/>
            </bean>
        </entry>
        <entry key="Latency">
            <bean class="com.griddynamics.jagger.util.Pair">
                <constructor-arg name="first" value="avgLatency"/>
                <constructor-arg name="second" value="Latency, sec"/>
            </bean>
        </entry>
        <entry key="Duration">
            <bean class="com.griddynamics.jagger.util.Pair">
                <constructor-arg name="first" value="duration"/>
                <constructor-arg name="second" value="Duration, sec"/>
            </bean>
        </entry>
        <entry key="Success rate">
            <bean class="com.griddynamics.jagger.util.Pair">
                <constructor-arg name="first" value="successRate"/>
                <constructor-arg name="second" value="Success rate"/>
            </bean>
        </entry>
        <entry key="Iterations">
            <bean class="com.griddynamics.jagger.util.Pair">
                <constructor-arg name="first" value="samples"/>
                <constructor-arg name="second" value="Iterations, samples"/>
            </bean>
        </entry>
    </util:map>
</beans>